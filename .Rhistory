select(flights, one_of(variabls_flights))
select(flights, one_of(variables_flights))
select(flights, one_of(variables_flights))
select(flights, contains("time"))
select(flights, contains("time"))
?select
select(flights, contains("time", ignore.case = TRUE))
select(flights, contains("time"))
select(flights, contains("time", ignore.case = FALSE))
select(flights, contains("TIME"))
select(flights, contains("time", ignore.case = FALSE))
select(flights, contains("time", ignore.case = TRUE))
select(flights, contains("Ttime"))
select(flights, contains("time"))
select(flights, contains("time", ignore.case = TRUE))
select(flights, contains("time", ignore.case = FALSE))
select(flights, contains("time", ignore.case = FALSE))
select(flights, contains("TIME", ignore.case = FALSE))
select(flights, contains("time", ignore.case = FALSE))
select(flights, contains("time", ignore.case = FALSE, vars = NULL))
flights_new <- select(flights, year:day,
ends_with("delay"),
distance,
air_time)
library(tidyverse)
flights_new <- select(flights, year:day,
ends_with("delay"),
distance,
air_time)
library(nycflights13)
nycflights13::flights
flights_new <- select(flights, year:day,
ends_with("delay"),
distance,
air_time)
View(flights_new)
mutate(flights_new, time_gain = arr_delay - dep_delay,
flight_speed = distance/(air_time/60))
mutate(flights_new, time_gain = arr_delay - dep_delay,
flight_speed = distance/(air_time/60))
transmutate(flights_new, time_gain = arr_delay - dep_delay,
flight_speed = distance/(air_time/60) )
transmute(flights_new, time_gain = arr_delay - dep_delay,
flight_speed = distance/(air_time/60) )
library(tidyverse)
library(nycflights13)
transmute(flights,
air_time,
air_hour = air_time %/% 60,
air_minute = air_time %% 60)
df <-  1:12
lag(1:12)
lag(1:12)   #movemos posiciones
lead(1:12)
cumsum(df)
cumprod(df)
cummin(df)
cummax(df)
cummean(df)
transmute(flights, has_been_deleyed = dep_delay > 0)
df <- c(1, 2, 3, NA, 8, 1, NA, 9, 7, 6)
min_rank(df)
min_rank(desc(df))
ntile(df, n = 4)
transmute(flights,
ntile(dep_delay, n = 100))
transmute(flights,
dep_delay,
ntile(dep_delay, n = 100))
select(flights, dep_time)
select(flights, dep_time, sched_dep_time)
?flights
transmute(flights, dep_time,
dep_time_hour = dep_time%/% 100,
dep_time_minute = dep_time %% 100
dep_time_total_minutes = dep_time_hour + dep_time_minute)
transmute(flights, dep_time,
dep_time_hour = dep_time%/% 100,
dep_time_minute = dep_time %% 100,
dep_time_total_minutes = dep_time_hour + dep_time_minute)
transmute(flights, dep_time,
dep_time_hour = dep_time%/% 100,
dep_time_minute = dep_time %% 100,
dep_time_total_minutes = dep_time_hour + dep_time_minute)
transmute(flights, dep_time,
dep_time_hour = dep_time%/% 100,
dep_time_minute = dep_time %% 100,
dep_time_total_minutes = dep_time_hour * 60 + dep_time_minute)
View(flights)
transmute(flights, air_time,
arr_time,
dep_time,
contra_time = arr_time - dep_time)
# podríamos estandarizar todos los variables a un término de tiempo comun, por ejemplo tiempo en minutos
#y ver las diferencias entre salidas y llegadas
# Por ejemplo,
transmute(flights, dep_time,
dep_time_hour = dep_time%/% 100,
dep_time_minute = dep_time %% 100,
dep_time_total_minutes = dep_time_hour * 60 + dep_time_minute,
arr_time,
arr_time_hour = arr_time%/% 100,
arr_time_minute = arr_time %% 100,
arr_time_total_minutes = arr_time_hour * 60 + arr_time_minute,
air_time_new = arr_time_total_minutes - dep_time_total_minutes)
# podríamos estandarizar todos los variables a un término de tiempo comun, por ejemplo tiempo en minutos
#y ver las diferencias entre salidas y llegadas
# Por ejemplo,
transmute(flights, dep_time,
dep_time_hour = dep_time%/% 100,
dep_time_minute = dep_time %% 100,
dep_time_total_minutes = dep_time_hour * 60 + dep_time_minute,
arr_time,
arr_time_hour = arr_time%/% 100,
arr_time_minute = arr_time %% 100,
arr_time_total_minutes = arr_time_hour * 60 + arr_time_minute,
air_time_new = arr_time_total_minutes - dep_time_total_minutes)
# podríamos estandarizar todos los variables a un término de tiempo comun, por ejemplo tiempo en minutos
#y ver las diferencias entre salidas y llegadas
# Por ejemplo,
View(transmute(flights, dep_time,
dep_time_hour = dep_time%/% 100,
dep_time_minute = dep_time %% 100,
dep_time_total_minutes = dep_time_hour * 60 + dep_time_minute,
arr_time,
arr_time_hour = arr_time%/% 100,
arr_time_minute = arr_time %% 100,
arr_time_total_minutes = arr_time_hour * 60 + arr_time_minute,
air_time_new = arr_time_total_minutes - dep_time_total_minutes))
# podríamos estandarizar todos los variables a un término de tiempo comun, por ejemplo tiempo en minutos
#y ver las diferencias entre salidas y llegadas
# Por ejemplo,
View(transmute(flights, dep_time,
dep_time_hour = dep_time%/% 100,
dep_time_minute = dep_time %% 100,
dep_time_total_minutes = dep_time_hour * 60 + dep_time_minute,
arr_time,
arr_time_hour = arr_time%/% 100,
arr_time_minute = arr_time %% 100,
arr_time_total_minutes = arr_time_hour * 60 + arr_time_minute,
air_time_new = arr_time_total_minutes - dep_time_total_minutes, air_time))
transmute(flights, air_time,
arr_time,
dep_time,
contra_time = arr_time - dep_time)
View(flights)
1:6 + 1:20
1:6 + 1:6
también son funciones vectoriales
#que podemos usar para hacer transformaciones con mutate.
#Investiga cuales trae R y cual es la sintaxis de cada una de ellas.
library(tidyverse)
library(nycflights13)
nycflights13::flights
select(flights, dep_time, sched_dep_time, dep_delay)
max(flights$dep_delay)
max(flights$dep_delay, na.rm = T)
arrange(flights$dep_delay)
arrange(flights, dep_dealy)
arrange(flights, dep_delay)
arrange(flights, dep_delay)
max(flights$dep_delay, na.rm = T)
min(flights$dep_delay, na.rm = T)
arrange(flights, desc(dep_delay))
min(flights$dep_delay, na.rm = T)
max(flights$dep_delay, na.rm = T)
transmute(flights, dep_delay_min = dep_delay_min/60)
transmute(flights, dep_delay_min = dep_delay/60)
#ahora voy a tomar los minutos y convertirlos a horas para dep_time y shed_dep_time
transmute(flights, dep_delay_min = dep_delay/60, dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60)
#ahora voy a tomar los minutos y convertirlos a horas para dep_time y shed_dep_time
transmute(flights, dep_delay_min = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute)) #con abs tomo el valor absoluto
transmute(flights, dep_delay_min = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute)
)
transmute(flights, dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute)
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand)
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute,
transmute(flights, dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand)
transmute(flights, dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand)
transmute(flights, dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand
)
View(transmute(flights, dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand
) )
View(transmute(flights, dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = dep_delay_stand - dep_delay_hour
) )
transmute(flights, dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs(dep_delay_stand) - abs(dep_delay_hour))
View(transmute(flights, dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs(dep_delay_stand) - abs(dep_delay_hour)))
View(transmute(flights, dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs(dep_delay_stand) - abs(dep_delay_hour)))
View(transmute(flights,dep_delay, dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs(dep_delay_stand) - abs(dep_delay_hour)))
View(transmute(flights,dep_delay,
dep_time,
dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs(dep_delay_stand) - abs(dep_delay_hour)))
arrange(flights, desc(dep_delay))
arrange(flights, desc(dep_delay))
View (arrange(flights, desc(dep_delay)))[1:10,]
View (arrange(flights, desc(dep_delay)))[1:10, 6]
View (arrange(flights, desc(dep_delay))[1:10,])
1:6 + 1:20
df <- c(1, 2, 3, NA, 8, 1, NA, 9, 7, 6)
min_rank(df)
dens_rank(df)
min_rank(desc(df))
dense_rank(df)
View(transmute(flights,dep_delay,
dep_time,
dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + abs(dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs(dep_delay_stand) - abs(dep_delay_hour)))
transmute(flights, dep_delay_hour = dep_delay/60) # recordemos que el negativo significa que el
data <- transmute(flights,dep_delay,
dep_time,
dep_delay_hour = dep_delay/60,
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + (dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs(dep_delay_stand) - (dep_delay_hour))
select(data,  dep_delay_hour, dep_time_hour_stand,  sched_dep_time_stand)
data <- transmute(flights,dep_delay,
dep_time,
dep_delay_hour = abs(dep_delay/60),
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + (dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs(dep_delay_stand) - (dep_delay_hour))
select(data,  dep_delay_hour, dep_time_hour_stand,  sched_dep_time_stand)
select(data,  dep_delay_hour, dep_time_hour_stand,  sched_dep_time_stand)
select(data,  dep_delay_hour, dep_time_hour_stand,  sched_dep_time_stand, options(digits = 2 ))
select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand, options(digits = 2))
round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand), digits = 2)
data <-  round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand), digits = 2)
data
View(data)
data <-  round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand), digits = 3)
round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand), digits = 3)
data <-  round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand), digits = 3)
View(data)
data <-  round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand), digits ==3)
data <-  round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand), digits = 3)
View(round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand), digits = 3))
View(round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand), digits = 3)))
round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand, dif = abs(dep_time_hour_stand - sched_dep_time_stand) ), digits = 3)
round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand, dif = abs(dep_time_hour_stand - sched_dep_time_stand)), digits = 2)
round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand, dif = abs(dep_time_hour_stand - sched_dep_time_stand)), digits = 4)
data <- transmute(flights,dep_delay,
dep_time,
dep_delay_hour = abs(dep_delay/60),
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + (dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs(dep_delay_stand) - (dep_delay_hour))
round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand, dif = abs(dep_time_hour_stand - sched_dep_time_stand)), digits = 4)
data <- transmute(flights,dep_delay,
dep_time,
dep_delay_hour = abs(dep_delay/60),
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + (dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs(dep_delay_stand) - (dep_delay_hour))
round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand, dif = abs(dep_time_hour_stand - sched_dep_time_stand)), digits = 4)
data <- transmute(flights,dep_delay,
dep_time,
dep_delay_hour = abs(dep_delay/60),
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + (dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + abs(sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs(dep_delay_stand) - (dep_delay_hour))
View(data)
round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand, diff = abs(dep_time_hour_stand - sched_dep_time_stand)), digits = 4)
sched_dep_time_stand, diff = dep_time_hour_stand - sched_dep_time_stand, digits = 4)
data <- transmute(flights, dep_delay,
dep_time,
dep_delay_hour = abs(dep_delay/60),
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + (dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + (sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs((dep_delay_stand) - (dep_delay_hour)))
round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand, diff = dep_time_hour_stand - sched_dep_time_stand, digits = 4))
round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand , diff = dep_time_hour_stand - sched_dep_time_stand, digits = 4))
data <- transmute(flights, dep_delay,
dep_time,
dep_delay_hour = abs(dep_delay/60),
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + (dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + (sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs((dep_delay_stand) - (dep_delay_hour)))
round(select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand , diff = dep_time_hour_stand - sched_dep_time_stand, digits = 4))
select(data,  dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand , diff = dep_time_hour_stand - sched_dep_time_stand)
select(data,dep_delay_hour, dep_time_hour_stand,
sched_dep_time_stand , diff = dep_time_hour_stand - sched_dep_time_stand)
View(data)
select(data, dep_delay_hour, sched_dep_time_stand, dep_delay_stand)
select(data, dep_delay_hour, sched_dep_time_stand, dep_delay_stand)
select(data, dep_delay_hour, sched_dep_time_stand, dep_time_hour_stand)
data1 <- select(data, dep_delay_hour, sched_dep_time_stand, dep_time_hour_stand)
mutate(data1, dep_delay_hour, sched_dep_time_stand, dep_time_hour_stand,
diff = abs(sched_dep_time_stand - dep_time_hour_stand))
data2 <-  mutate(data1, dep_delay_hour, sched_dep_time_stand, dep_time_hour_stand,
diff = abs(sched_dep_time_stand - dep_time_hour_stand))
View(data2)
hist(data2$diff)
hist(data2$diff)
count(data2$diff == 0)
count(data2$diff = 0)
n(data2$diff = 0)
ggplot(data2) +
hist(diff)
ggplot(data2) +
hist(diff)
data2 <-  mutate(data1, dep_delay_hour, sched_dep_time_stand, dep_time_hour_stand,
diff = abs(sched_dep_time_stand - dep_time_hour_stand))
class(data2$diff)
ggplot(data2) +
geom_histogram(mapping = aes(diff))
data3 <- filter(data2, diff != 0)
View(data3)
data2 <-  mutate(data1, dep_delay_hour, sched_dep_time_stand, dep_time_hour_stand,
diff = abs(sched_dep_time_stand - dep_time_hour_stand), difff = abs(diff - dep_delay_hour))
ggplot(data2) +
geom_histogram(mapping = aes(difff))
data3 <- filter(data2, difff != 0)
View(data3)
ggplot(data2) +
geom_histogram(mapping = aes(difff))
ggplot(data3) +
geom_histogram(mapping = aes(difff))
data <- transmute(flights, dep_delay,
dep_time,
dep_delay_hour = abs(dep_delay/60),
dep_time_hour = dep_time%/% 100,
dep_time_minute = (dep_time %% 100)/60,
dep_time_hour_stand = dep_time_hour + (dep_time_minute),  #con abs() tomo el valor absoluto
sched_dep_time_hour =  sched_dep_time %/% 100,
sched_dep_time_minute = (sched_dep_time %% 100)/60,
sched_dep_time_stand = sched_dep_time_hour + (sched_dep_time_minute),
dep_delay_stand = dep_time_hour_stand - sched_dep_time_stand,
diff = abs((dep_delay_stand) - (dep_delay_hour)))
data1 <- select(data, dep_delay_hour, sched_dep_time_stand, dep_time_hour_stand)
data2 <-  mutate(data1, dep_delay_hour, sched_dep_time_stand, dep_time_hour_stand,
diff = abs(sched_dep_time_stand - dep_time_hour_stand), difff = abs(diff - dep_delay_hour))
data3 <- filter(data2, difff != 0)
ggplot(data3) +
geom_histogram(mapping = aes(difff))
data3 <- filter(data2, difff > 0.001)
ggplot(data3) +
geom_histogram(mapping = aes(difff))
data3 <- filter(data2, difff > 0)
ggplot(data3) +
geom_histogram(mapping = aes(difff))
data3 <- filter(data2, difff == 24)
ggplot(data3) +
geom_histogram(mapping = aes(difff))
data3 <- filter(data2, difff == 24)
ggplot(data3) +
geom_histogram(mapping = aes(difff))
data3 <- filter(data2, difff = 24)
data3 <- filter(data2, difff == 24)
ggplot(data3) +
geom_histogram(mapping = aes(difff))
data3 <- filter(data2, difff != 24)
ggplot(data3) +
geom_histogram(mapping = aes(difff))
View(data3)
data3 <- filter(data2, difff > 0 )
data3 <- filter(data2, difff > 1 )
data3 <- filter(data2, difff > 0.001 )
View(data3)
